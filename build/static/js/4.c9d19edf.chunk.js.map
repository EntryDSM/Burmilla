{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","data/api/checkApiStatus.ts","components/applicant/style.ts","components/applicant/applicantInfo/unSubmitted/style.ts","components/applicant/applicantInfo/unSubmitted/index.tsx","components/applicant/applicantInfo/submitted/style.ts","components/applicant/applicantInfo/submitted/applicantStatus/style.ts","components/applicant/applicantInfo/submitted/applicantStatus/index.ts","components/applicant/applicantInfo/submitted/applicantStatus/ApplicantStatus.tsx","components/applicant/applicantInfo/submitted/basicInfo/style.ts","utils/checkType.tsx","components/applicant/applicantInfo/submitted/basicInfo/index.ts","components/applicant/applicantInfo/submitted/basicInfo/BasicInfo.tsx","components/applicant/applicantInfo/submitted/detailInfo/style.ts","components/applicant/applicantInfo/submitted/detailInfo/QualificationexamDetailInfo.tsx","components/applicant/applicantInfo/submitted/detailInfo/GeneralDetailInfo.tsx","components/applicant/applicantInfo/submitted/detailInfo/index.ts","components/applicant/applicantInfo/submitted/detailInfo/DetailInfo.tsx","components/applicant/applicantInfo/submitted/documents/style.ts","components/applicant/applicantInfo/submitted/documents/index.ts","components/applicant/applicantInfo/submitted/documents/Documents.tsx","components/applicant/applicantInfo/submitted/index.tsx","components/applicant/applicantInfo/index.tsx","components/applicant/applicantsList/style.ts","components/applicant/applicantsList/applicantsListHeader/index.tsx","components/applicant/applicantsList/applicantsListItem/index.tsx","components/applicant/applicantsList/index.tsx","components/applicant/filterSearch/searchBar/style.ts","components/applicant/filterSearch/searchBar/index.tsx","components/applicant/filterSearch/filter/style.ts","utils/download.tsx","components/applicant/filterSearch/filter/index.tsx","components/applicant/filterSearch/style.ts","components/applicant/filterSearch/index.tsx","components/applicant/pagination/style.ts","components/applicant/pagination/index.tsx","utils/pagination.ts","components/applicant/Applicant.tsx","components/applicant/index.ts"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","checkApiStatus","apiStatus","_0","_200","_201","_204","_400","_401","_403","_404","Applicant","styled","div","pxToRem","color","backgorund","ApplicantContainer","ApplicantInfoWrap","Wrapper","BasicInfoTableTR","tr","Unsubmitted","applicant_contact","email","telephone_number","parent_tel","home_tel","school_tel","CheckboxContainer","lightBorderColor","ApplicantStatus","is_printed_arrived","updateApplicantStatusStatus","receipt_code","resetUpdateStatus","updateApplicantStatus","React","useState","useEffect","window","alert","handleClickCheckbox","a","confirm","onClick","isChecked","className","IDPicture","img","InfoLine","li","isOneLine","returnApplicationType","applicationType","returnEducationalType","educationalType","returnContact","contact","replace","BasicInfo","applicantPersonalData","photo_file_name","birth_date","school_name","educational_status","application_type","detail_address","address","checkApplicationType","useCallback","checkEducationalType","src","alt","DetailInfoTable","table","DetailInfo","conversion_score","applicantEvaluation","setContactForm","volunteer_time","day_absence_count","lecture_absence_count","early_leave_count","lateness_count","rowSpan","colSpan","isQUALIFICATION_EXAM","QualificationexamDetailInfo","GeneralDetailInfo","ContentSelector","primaryColor","Document","Documents","self_introduce","study_plan","selectedItem","setSelectedItem","handleClickContent","content","contents","map","v","Submitted","applicantStatus","applicantListItem","checkGradeType","ApplicantInfo","applicantsList","currnetApplicantInfo","applicant_information","applicants_information_response","info","personal_data","evaluation","status","ApplicantsList","ListHeader","thead","light","TH","th","darkBorderColor","TR","isSelected","lightPrimaryColor","TD","td","CheckboxWrapper","ApplicantsListItem","filters","applicantInfo","is_daejeon","is_submit","handleClick","checkRegion","isDaejeon","checkApplyType","checkSubmitStatus","memo","handleClickListItem","SearchBarWrapper","CategoryDropdownClosed","primaryTextColor","CategoryDropdownOpened","ul","SearchInputContainer","SearchBar","searchProgressImg","searchIcon","setFilter","categoryList","id","keyword","setKeyword","selectedCategory","setSelectedCategory","isOpened","setIsOpened","handleClickDropdown","handleSelectItem","category","size","handleChangeKeyword","e","target","currentTarget","type","placeholder","onChange","FilterWrapper","FilterSelectBox","FilterButtonContainer","FilterItemContainer","span","downloadExcel","api","title","response","currentTime","Date","link","document","createElement","href","URL","createObjectURL","Blob","setAttribute","getMonth","getDate","getHours","getMinutes","click","Filter","checkIsChecked","handleDownloadExcel","downloadApplicantsListExcel","handleDeleteApplicants","item","newFilter","handleChangeFilter","FilterSearchWrapper","FilterSearch","list_progressbar","search_icon","PaginationContainer","PageBtn","Pagination","currentIndex","setCurrentIndex","indexList","setIndexList","maxIndex","range","start","end","getIndexList","total_elements","handleClickIndex","index","handleClickPrev","handleClickNext","shift_left_icon","shift_right_icon"],"mappings":"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","file":"static/js/4.c9d19edf.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function checkApiStatus(apiStatus) {\r\n    return {\r\n      _0: apiStatus === 0,\r\n      _200: apiStatus === 200,\r\n      _201: apiStatus === 201,\r\n      _204: apiStatus === 204,\r\n      _400: apiStatus === 400,\r\n      _401: apiStatus === 401,\r\n      _403: apiStatus === 403,\r\n      _404: apiStatus === 404,\r\n    };\r\n  }\r\n  ","import styled from \"styled-components\";\r\nimport { color, pxToRem } from \"../../styles\";\r\n\r\nexport const Applicant = styled.div`\r\n  width: 80%;\r\n  min-width: ${pxToRem(1136)}rem;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  background: ${color.backgorund};\r\n  box-sizing: border-box;\r\n  padding-top: 75px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ApplicantContainer = styled.div`\r\n  flex: 4;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const ApplicantInfoWrap = styled.div`\r\n  flex: 3;\r\n  position: absolute;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 120px 72px;\r\n\r\n  > h3 {\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    margin-bottom: 55px;\r\n  }\r\n`;\r\n\r\nexport const BasicInfoTableTR = styled.tr`\r\n  text-align: left;\r\n  font-size: 16px;\r\n  line-height: 48px;\r\n  > th {\r\n    width: 146px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  > td {\r\n    font-weight: 300;\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\nimport { JsxElement } from \"typescript\";\r\nimport * as S from \"./style\";\r\n\r\ninterface Props {\r\n  applicant_contact: {\r\n    email: string;\r\n    telephone_number: number;\r\n    parent_tel: number;\r\n    school_tel?: number;\r\n    home_tel: number;\r\n  };\r\n}\r\n\r\nconst Unsubmitted: FC<Props> = ({\r\n  applicant_contact: {\r\n    email,\r\n    telephone_number,\r\n    parent_tel,\r\n    home_tel,\r\n    school_tel,\r\n  },\r\n}) => {\r\n  const checkIsSubmitted = () => {\r\n    if (school_tel !== null) {\r\n      return (\r\n        <>\r\n          <S.BasicInfoTableTR>\r\n            <th>이메일</th>\r\n            <td>{email}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>학생 연락처</th>\r\n            <td>{telephone_number}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>부모님 연락처</th>\r\n            <td>{parent_tel}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>학교 연락처</th>\r\n            <td>{school_tel}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>자택 연락처</th>\r\n            <td>{home_tel}</td>\r\n          </S.BasicInfoTableTR>\r\n        </>\r\n      );\r\n    }\r\n    if (school_tel === null) {\r\n      return (\r\n        <>\r\n          <S.BasicInfoTableTR>\r\n            <th>이메일</th>\r\n            <td>{email}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>학생 연락처</th>\r\n            <td>{telephone_number}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>부모님 연락처</th>\r\n            <td>{parent_tel}</td>\r\n          </S.BasicInfoTableTR>\r\n          <S.BasicInfoTableTR>\r\n            <th>자택 연락처</th>\r\n            <td>{home_tel}</td>\r\n          </S.BasicInfoTableTR>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <h3>최종제출을 하지 않은 지원자입니다.</h3>\r\n      <table>\r\n        <tbody>{checkIsSubmitted}</tbody>\r\n      </table>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Unsubmitted;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 30px 68px 0px 68px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { color } from '../../../../../styles/index';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const CheckboxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 36px;\r\n\r\n  &:last-child {\r\n    margin-right: 60px;\r\n  }\r\n\r\n  > p {\r\n    font-size: 14px;\r\n    color: ${color.lightBorderColor};\r\n    margin-left: 18px;\r\n  }\r\n`;\r\n","import ApplicantStatus from \"./ApplicantStatus\";\r\n\r\nexport default ApplicantStatus;","import React, { FC } from \"react\";\r\nimport * as S from \"./style\";\r\nimport { Checkbox, Button } from \"../../../../common\";\r\nimport checkApiStatus from \"../../../../../data/api/checkApiStatus\";\r\nimport { UpdateApplicantStatusPayload } from \"../../../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  is_printed_arrived: boolean;\r\n  receipt_code: number;\r\n  updateApplicantStatusStatus: number;\r\n  updateApplicantStatus: UpdateApplicantStatusPayload;\r\n  resetUpdateStatus;\r\n}\r\n\r\nconst ApplicantStatuses: FC<Props> = ({\r\n  is_printed_arrived,\r\n  receipt_code,\r\n  updateApplicantStatusStatus,\r\n  updateApplicantStatus,\r\n  resetUpdateStatus,\r\n}) => {\r\n  const [changedStatus, setChangedStatus] = React.useState<string>(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (checkApiStatus(updateApplicantStatusStatus)._204) {\r\n      // updateApplicantList({\r\n      //   is_printed_arrived,\r\n      // });\r\n\r\n      if (changedStatus === \"is_submit\") {\r\n        // getApplicantInfo({ receipt_code });\r\n      }\r\n    } else if (checkApiStatus(updateApplicantStatusStatus)._400) {\r\n      window.alert(\"지원자 정보 수정 권한이 없습니다.\");\r\n    }\r\n\r\n    resetUpdateStatus();\r\n  }, [updateApplicantStatusStatus]);\r\n\r\n  const handleClickCheckbox = async (is_printed_arrived: boolean) => {\r\n    if (window.confirm(\"지원자의 상태를 수정하시겠습니까?\")) {\r\n      // updateApplicantStatus({\r\n      //   is_printed_arrived,\r\n      // });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.CheckboxContainer\r\n        onClick={() => handleClickCheckbox(is_printed_arrived)}\r\n      >\r\n        <Checkbox isChecked={is_printed_arrived} />\r\n        <p>원서 미도착</p>\r\n      </S.CheckboxContainer>\r\n      <Button\r\n        className=\"applicant-info__cancel-btn\"\r\n        // onClick={() => handleClickCheckbox(email, \"is_submit\")}\r\n      >\r\n        최종제출 취소\r\n      </Button>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default ApplicantStatuses;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 30px;\r\n\r\n  > ul {\r\n    padding: 18px 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport const IDPicture = styled.img`\r\n  width: 150px;\r\n  height: 200px;\r\n  border: solid 1px #707070;\r\n  margin-right: 36px;\r\n`;\r\n\r\nexport const InfoLine = styled.li<{ isOneLine: boolean }>`\r\n  display: flex;\r\n  align-items: baseline;\r\n  margin-bottom: 28px;\r\n  ${({ isOneLine }) => !isOneLine && 'flex-direction: column'};\r\n\r\n  > h3 {\r\n    font-size: 32px;\r\n    margin-right: 20px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  > p {\r\n    font-size: 16px;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n","export const returnRegion = (isDaejeon: boolean) => {\r\n  if (isDaejeon) return \"대전\";\r\n  else if (isDaejeon === false) return \"전국\";\r\n  else return \"\";\r\n};\r\n\r\nexport const returnApplicationType = (applicationType: string) => {\r\n  switch (applicationType) {\r\n    case \"COMMON\":\r\n      return \"일반전형\";\r\n    case \"MEISTER\":\r\n      return \"마이스터 전형\";\r\n    case \"SOCIAL_ONE_PARENT\":\r\n    case \"SOCIAL_FROM_NORTH\":\r\n    case \"SOCIAL_MULTICULTURAL\":\r\n    case \"SOCIAL_BASIC_LIVING\":\r\n    case \"SOCIAL_LOWEST_INCOME\":\r\n    case \"SOCIAL_TEEN_HOUSEHOLDER\":\r\n      return \"사회통합 전형\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const returnAdditionalType = (additionalType: string) => {\r\n  switch (additionalType) {\r\n    case \"NATIONAL_MERIT\":\r\n      return \"국가유공자\";\r\n    case \"PRIVILEGED_ADMISSION\":\r\n      return \"특례입학대상자\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const returnEducationalType = (educationalType: string) => {\r\n  switch (educationalType) {\r\n    case \"QUALIFICATION_EXAM\":\r\n      return \"검정고시\";\r\n    case \"PROSPECTIVE_GRADUATE\":\r\n      return \"3학년 졸업예정자\";\r\n    case \"GRADUATE\":\r\n      return \"졸업\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const returnContact = (contact: string) => {\r\n  if (!contact) return \"\";\r\n  return contact\r\n    .replace(/[^0-9]/g, \"\")\r\n    .replace(\r\n      /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/,\r\n      \"$1 - $2 - $3\"\r\n    )\r\n    .replace(\"--\", \"-\");\r\n};\r\n","import BasicInfo from \"./BasicInfo\";\r\n\r\nexport default BasicInfo;","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"./style\";\r\nimport { applicantPersonalData } from \"../../../../../data/modules/redux/reducer/applicant/interface\";\r\nimport {\r\n  returnApplicationType,\r\n  returnEducationalType,\r\n} from \"../../../../../utils/checkType\";\r\n\r\ninterface Props {\r\n  applicantPersonalData: applicantPersonalData;\r\n}\r\n\r\nconst BasicInfo: FC<Props> = ({\r\n  applicantPersonalData: {\r\n    photo_file_name,\r\n    name,\r\n    birth_date,\r\n    school_name,\r\n    educational_status,\r\n    application_type,\r\n    detail_address,\r\n    address,\r\n  },\r\n}) => {\r\n  const checkApplicationType = React.useCallback(() => {\r\n    return returnApplicationType(application_type);\r\n  }, [application_type]);\r\n  const checkEducationalType = React.useCallback(() => {\r\n    return returnEducationalType(educational_status);\r\n  }, [educational_status]);\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.IDPicture src={photo_file_name} alt=\"ID Photo\" />\r\n      <ul>\r\n        <S.InfoLine isOneLine={true}>\r\n          <h3>{name}</h3> <p>{birth_date}</p>\r\n        </S.InfoLine>\r\n        <S.InfoLine isOneLine={false}>\r\n          {(school_name ? school_name + \" \" : \"\") +\r\n            checkEducationalType() +\r\n            \" \" +\r\n            checkApplicationType()}\r\n        </S.InfoLine>\r\n        <S.InfoLine isOneLine={false}>\r\n          <p>{address}</p>\r\n          <p>{detail_address}</p>\r\n        </S.InfoLine>\r\n      </ul>\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default BasicInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const DetailInfoTable = styled.table`\r\n  width: 100%;\r\n  height: 250px;\r\n  margin-top: 16px;\r\n  border-collapse: collapse;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid #ededed;\r\n  }\r\n  th {\r\n    text-align: center;\r\n    font-weight: normal;\r\n    width: 120px;\r\n    font-size: 12px;\r\n\r\n    &:first-child {\r\n      border-left: 0;\r\n    }\r\n  }\r\n  td {\r\n    text-align: left;\r\n    padding-left: 20px;\r\n    font-weight: 300;\r\n    font-size: 14px;\r\n\r\n    &:first-child {\r\n      width: 35%;\r\n    }\r\n\r\n    &:last-child {\r\n      border-right: 0;\r\n    }\r\n  }\r\n  div > span {\r\n    font-size: 12px;\r\n\r\n    &:last-child {\r\n      margin-left: 32px;\r\n    }\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"./style\";\r\nimport {\r\n  applicantPersonalData,\r\n  applicantEvaluation,\r\n} from \"../../../../../data/modules/redux/reducer/applicant/interface\";\r\nimport { returnContact } from \"../../../../../utils/checkType\";\r\n\r\ninterface Props {\r\n  applicantPersonalData: applicantPersonalData;\r\n  applicantEvaluation: applicantEvaluation;\r\n}\r\n\r\nconst DetailInfo: FC<Props> = ({\r\n  applicantPersonalData: { telephone_number, parent_tel, email, home_tel },\r\n  applicantEvaluation: { conversion_score },\r\n}) => {\r\n  const setContactForm = React.useCallback((contact: string) => {\r\n    return returnContact(contact);\r\n  }, []);\r\n\r\n  return (\r\n    <S.DetailInfoTable>\r\n      <tbody>\r\n        <tr>\r\n          <th>학생 연락처</th> <td>{setContactForm(telephone_number)}</td>\r\n          <th>부모님 연락처</th> <td>{setContactForm(parent_tel)}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>이메일</th> <td>{email}</td>\r\n          <th>자택 연락처</th> <td>{setContactForm(home_tel)}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>검정고시 평균 점수</th> <td>{conversion_score}점</td>\r\n        </tr>\r\n      </tbody>\r\n    </S.DetailInfoTable>\r\n  );\r\n};\r\nexport default DetailInfo;\r\n","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"./style\";\r\nimport {\r\n  applicantPersonalData,\r\n  applicantEvaluation,\r\n} from \"../../../../../data/modules/redux/reducer/applicant/interface\";\r\nimport { returnContact } from \"../../../../../utils/checkType\";\r\n\r\ninterface Props {\r\n  applicantPersonalData: applicantPersonalData;\r\n  applicantEvaluation: applicantEvaluation;\r\n}\r\n\r\nconst DetailInfo: FC<Props> = ({\r\n  applicantPersonalData: {\r\n    telephone_number,\r\n    parent_tel,\r\n    school_tel,\r\n    email,\r\n    home_tel,\r\n  },\r\n  applicantEvaluation: {\r\n    volunteer_time,\r\n    conversion_score,\r\n    day_absence_count,\r\n    lecture_absence_count,\r\n    early_leave_count,\r\n    lateness_count,\r\n  },\r\n}) => {\r\n  const setContactForm = React.useCallback((contact: string) => {\r\n    return returnContact(contact);\r\n  }, []);\r\n\r\n  return (\r\n    <S.DetailInfoTable>\r\n      <tbody>\r\n        <tr>\r\n          <th>이메일</th>\r\n          <td>{email}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>학생 연락처</th>\r\n          <td>{setContactForm(telephone_number)}</td>\r\n          <th>부모님 연락처</th>\r\n          <td>{setContactForm(parent_tel)}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>학교 연락처</th>\r\n          <td>{setContactForm(school_tel)}</td>\r\n          <th>자택 연락처</th>\r\n          <td>{setContactForm(home_tel)}</td>\r\n        </tr>\r\n        <tr></tr>\r\n        <tr>\r\n          <th>봉사시간</th>\r\n          <td>{volunteer_time || 0} 시간</td>\r\n          <th>성적 점수</th>\r\n          <td>{conversion_score || 0} 점</td>\r\n        </tr>\r\n        <tr>\r\n          <th rowSpan={2}>출석정보</th>\r\n          <td>\r\n            <div>\r\n              <span>전체 무단 결석 일수</span>\r\n              <span>{day_absence_count || 0} 일</span>\r\n            </div>\r\n          </td>\r\n          <td colSpan={2}>\r\n            <div>\r\n              <span>전체 무단 조퇴 일수</span>\r\n              <span>{early_leave_count || 0} 일</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div>\r\n              <span>전체 무단 지각 일수</span>\r\n              <span>{lateness_count || 0} 일</span>\r\n            </div>\r\n          </td>\r\n          <td colSpan={2}>\r\n            <div>\r\n              <span>전체 무단 결과 일수</span>\r\n              <span>{lecture_absence_count || 0} 일</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </S.DetailInfoTable>\r\n  );\r\n};\r\nexport default DetailInfo;\r\n","import DetailInfo from \"./DetailInfo\"\r\n\r\nexport default DetailInfo;","import React, { FC } from \"react\";\r\n\r\nimport QualificationexamDetailInfo from \"./QualificationexamDetailInfo\";\r\nimport GeneralDetailInfo from \"./GeneralDetailInfo\";\r\nimport {\r\n  applicantPersonalData,\r\n  applicantEvaluation,\r\n} from \"../../../../../data/modules/redux/reducer/applicant/interface\";\r\n\r\ninterface Props {\r\n  isQUALIFICATION_EXAM: boolean;\r\n  applicantPersonalData: applicantPersonalData;\r\n  applicantEvaluation: applicantEvaluation;\r\n}\r\n\r\nconst DetailInfo: FC<Props> = ({\r\n  isQUALIFICATION_EXAM,\r\n  applicantPersonalData,\r\n  applicantEvaluation,\r\n}) => {\r\n  return isQUALIFICATION_EXAM ? (\r\n    <QualificationexamDetailInfo\r\n      applicantPersonalData={applicantPersonalData}\r\n      applicantEvaluation={applicantEvaluation}\r\n    />\r\n  ) : (\r\n    <GeneralDetailInfo\r\n      applicantPersonalData={applicantPersonalData}\r\n      applicantEvaluation={applicantEvaluation}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DetailInfo;\r\n","import styled from 'styled-components';\r\n\r\nimport { color } from '../../../../../styles';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-top: 36px;\r\n`;\r\n\r\nexport const ContentSelector = styled.div`\r\n  border-bottom: solid 1px ${color.primaryColor};\r\n  > span {\r\n    font-size: 16px;\r\n    padding: 10px;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n\r\n    &.selected {\r\n      border-bottom: solid 4px ${color.primaryColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Document = styled.div`\r\n  height: 200px;\r\n  overflow-y: auto;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  line-height: 2.25;\r\n  margin-top: 20px;\r\n`;\r\n","import Documents from \"./Documents\";\r\n\r\nexport default Documents;","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"./style\";\r\nimport { applicantEvaluation } from \"../../../../../data/modules/redux/reducer/applicant/interface\";\r\n\r\ninterface Props {\r\n  applicantEvaluation: applicantEvaluation;\r\n}\r\n\r\nconst Documents: FC<Props> = ({\r\n  applicantEvaluation: { self_introduce, study_plan },\r\n}) => {\r\n  const [selectedItem, setSelectedItem] = React.useState(\"자기소개서\");\r\n\r\n  const handleClickContent = React.useCallback(\r\n    (content: string) => {\r\n      setSelectedItem(content);\r\n    },\r\n    [selectedItem]\r\n  );\r\n\r\n  const contents = [\"자기소개서\", \"학업계획서\"];\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.ContentSelector>\r\n        {contents.map((v) => (\r\n          <span\r\n            key={v}\r\n            className={selectedItem === v ? \"selected\" : \"\"}\r\n            onClick={() => handleClickContent(v)}\r\n          >\r\n            {v}\r\n          </span>\r\n        ))}\r\n      </S.ContentSelector>\r\n      <S.Document>\r\n        {selectedItem === contents[0] ? self_introduce : study_plan}\r\n      </S.Document>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Documents;\r\n","import React, { FC } from \"react\";\r\nimport * as S from \"./style\";\r\nimport ApplicantStatusContainer from \"./applicantStatus\";\r\nimport BasicInfo from \"./basicInfo\";\r\nimport DetailInfo from \"./detailInfo\";\r\nimport Documents from \"./documents\";\r\nimport {\r\n  ApplicantListItem,\r\n  ApplicantPersonalData,\r\n  ApplicantEvaluation,\r\n  ApplicantStatus,\r\n  UpdateApplicantStatusPayload,\r\n} from \"../../../../data/api/apiTypes\";\r\nimport { returnEducationalType } from \"../../../../utils/checkType\";\r\n\r\ninterface Props {\r\n  applicantPersonalData: ApplicantPersonalData;\r\n  applicantEvaluation: ApplicantEvaluation;\r\n  applicantStatus: ApplicantStatus;\r\n  applicantListItem: ApplicantListItem;\r\n  updateApplicantStatusStatus: number;\r\n  updateApplicantStatus: UpdateApplicantStatusPayload;\r\n  resetUpdateStatus;\r\n}\r\n\r\nconst Submitted: FC<Props> = ({\r\n  applicantPersonalData,\r\n  applicantEvaluation,\r\n  applicantStatus,\r\n  applicantListItem,\r\n  updateApplicantStatusStatus,\r\n  updateApplicantStatus,\r\n  resetUpdateStatus,\r\n}) => {\r\n  const checkGradeType = React.useCallback(() => {\r\n    return (\r\n      returnEducationalType(applicantPersonalData.educational_status) ===\r\n      \"검정고시\"\r\n    );\r\n  }, [applicantPersonalData.application_type]);\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <ApplicantStatusContainer\r\n        is_printed_arrived={applicantStatus.is_printed_arrived}\r\n        receipt_code={applicantListItem.receipt_code}\r\n        updateApplicantStatusStatus={updateApplicantStatusStatus}\r\n        updateApplicantStatus={updateApplicantStatus}\r\n        resetUpdateStatus={resetUpdateStatus}\r\n      />\r\n      <BasicInfo applicantPersonalData={applicantPersonalData} />\r\n      <DetailInfo\r\n        isQUALIFICATION_EXAM={checkGradeType()}\r\n        applicantPersonalData={applicantPersonalData}\r\n        applicantEvaluation={applicantEvaluation}\r\n      />\r\n      <Documents applicantEvaluation={applicantEvaluation} />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Submitted;\r\n","import React, { FC } from \"react\";\r\nimport Unsubmitted from \"./unSubmitted\";\r\nimport Submitted from \"./submitted\";\r\nimport {\r\n  GetApplicantsListResponse,\r\n  GetApplicantInfoResponse,\r\n  UpdateApplicantStatusPayload,\r\n} from \"../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  applicantsList: GetApplicantsListResponse;\r\n  currnetApplicantInfo: GetApplicantInfoResponse;\r\n  updateApplicantStatusStatus: number;\r\n  updateApplicantStatus: UpdateApplicantStatusPayload;\r\n  resetUpdateStatus;\r\n}\r\n\r\nconst ApplicantInfo: FC<Props> = ({\r\n  applicantsList,\r\n  currnetApplicantInfo,\r\n  updateApplicantStatusStatus,\r\n  updateApplicantStatus,\r\n  resetUpdateStatus,\r\n}) => {\r\n  return currnetApplicantInfo.applicant_information ? (\r\n    <>\r\n      {applicantsList.applicants_information_response &&\r\n        applicantsList.applicants_information_response.map((info) => (\r\n          <Submitted\r\n            applicantPersonalData={\r\n              currnetApplicantInfo.applicant_information.personal_data\r\n            }\r\n            applicantEvaluation={\r\n              currnetApplicantInfo.applicant_information.evaluation\r\n            }\r\n            applicantStatus={currnetApplicantInfo.applicant_information.status}\r\n            applicantListItem={info}\r\n            updateApplicantStatusStatus={updateApplicantStatusStatus}\r\n            updateApplicantStatus={updateApplicantStatus}\r\n            resetUpdateStatus={resetUpdateStatus}\r\n          />\r\n        ))}\r\n    </>\r\n  ) : (\r\n    <Unsubmitted applicant_contact={currnetApplicantInfo.applicant_contact} />\r\n  );\r\n};\r\n\r\nexport default ApplicantInfo;\r\n","import styled from 'styled-components';\r\n\r\nimport { color } from '../../../styles/index';\r\n\r\nexport const ApplicantsList = styled.table`\r\n  width: 100%;\r\n  max-height: 45%;\r\n  border: none;\r\n  text-align: center;\r\n  border-collapse: collapse;\r\n  table-layout: fixed;\r\n`;\r\n\r\nexport const ListHeader = styled.thead`\r\n  background: ${color.light};\r\n  line-height: 2.8;\r\n`;\r\n\r\nexport const TH = styled.th`\r\n  width: 14%;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  font-family: 'Noto Sans KR-Medium', sans-serif !important;\r\n  color: ${color.darkBorderColor};\r\n  border-top: 1.5px solid #303030;\r\n\r\n  &:first-child {\r\n    width: 16%;\r\n  }\r\n`;\r\n\r\nexport const TR = styled.tr<{ isSelected: boolean }>`\r\n  line-height: 2.6;\r\n  cursor: pointer;\r\n  border: 1px 0 solid ${({ isSelected }) => (isSelected ? color.lightPrimaryColor : '#d3d3d3')};\r\n\r\n  &:last-child {\r\n    border-bottom: 1.5px solid #303030;\r\n  }\r\n`;\r\n\r\nexport const TD = styled.td`\r\n  height: 100%;\r\n  color: #3f3f3f;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const CheckboxWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"../style\";\r\n\r\nconst ApplicantsList: FC = () => {\r\n  return (\r\n    <S.ListHeader className=\"no-select\">\r\n      <tr>\r\n        <S.TH>접수번호</S.TH>\r\n        <S.TH>이름</S.TH>\r\n        <S.TH>지역</S.TH>\r\n        <S.TH>전형</S.TH>\r\n        <S.TH>원서 도착 여부</S.TH>\r\n        <S.TH>최종제출</S.TH>\r\n      </tr>\r\n    </S.ListHeader>\r\n  );\r\n};\r\n\r\nexport default ApplicantsList;\r\n","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"../style\";\r\nimport { Checkbox } from \"../../../common\";\r\nimport {\r\n  returnRegion,\r\n  returnApplicationType,\r\n} from \"../../../../utils/checkType\";\r\nimport {\r\n  ApplicantListItem,\r\n  GetApplicantsListPayload,\r\n} from \"../../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  filters: GetApplicantsListPayload;\r\n  applicantInfo: ApplicantListItem;\r\n  handleClick: (receipt_code: number) => void;\r\n}\r\n\r\nconst ApplicantsListItem: FC<Props> = ({\r\n  filters,\r\n  applicantInfo: {\r\n    receipt_code,\r\n    name,\r\n    is_daejeon,\r\n    application_type,\r\n    is_printed_arrived,\r\n    is_submit,\r\n  },\r\n  handleClick,\r\n}) => {\r\n  const checkRegion = React.useCallback(() => {\r\n    return returnRegion(is_daejeon);\r\n  }, [is_daejeon]);\r\n  const checkApplyType = React.useCallback(() => {\r\n    return returnApplicationType(application_type);\r\n  }, [application_type]);\r\n  const checkSubmitStatus = React.useCallback(\r\n    () => (is_submit ? \"완료\" : \"미완료\"),\r\n    [is_submit]\r\n  );\r\n\r\n  return (\r\n    <S.TR\r\n      isSelected={receipt_code === filters?.receipt_code}\r\n      onClick={() => handleClick(receipt_code)}\r\n    >\r\n      <S.TD>{receipt_code}</S.TD>\r\n      <S.TD>{name}</S.TD>\r\n      <S.TD>{checkRegion()}</S.TD>\r\n      <S.TD>{checkApplyType()}</S.TD>\r\n      <S.TD>\r\n        <S.CheckboxWrapper>\r\n          <Checkbox isChecked={is_printed_arrived} />\r\n        </S.CheckboxWrapper>\r\n      </S.TD>\r\n      <S.TD>{checkSubmitStatus()}</S.TD>\r\n    </S.TR>\r\n  );\r\n};\r\n\r\nexport default React.memo(ApplicantsListItem);\r\n","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"./style\";\r\nimport ApplicantsListHeader from \"./applicantsListHeader\";\r\nimport ApplicantsListItem from \"./applicantsListItem\";\r\nimport {\r\n  GetApplicantsListPayload,\r\n  GetApplicantsListResponse,\r\n} from \"../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  filters: GetApplicantsListPayload;\r\n  applicantsList: GetApplicantsListResponse;\r\n}\r\n\r\nconst ApplicantsList: FC<Props> = ({ applicantsList, filters }) => {\r\n  const handleClickListItem = React.useCallback((receipt_code: number) => {\r\n    // getApplicantInfo({ receipt_code });\r\n  }, []);\r\n\r\n  return (\r\n    <S.ApplicantsList>\r\n      <ApplicantsListHeader />\r\n      <tbody className=\"no-select\">\r\n        {applicantsList.applicants_information_response &&\r\n          applicantsList.applicants_information_response.map((info) => (\r\n            <ApplicantsListItem\r\n              filters={filters}\r\n              key={info.receipt_code}\r\n              applicantInfo={info}\r\n              handleClick={handleClickListItem}\r\n            />\r\n          ))}\r\n      </tbody>\r\n    </S.ApplicantsList>\r\n  );\r\n};\r\n\r\nexport default ApplicantsList;\r\n","import styled from 'styled-components';\r\n\r\nimport { color, pxToRem } from '../../../../styles';\r\n\r\nexport const SearchBarWrapper = styled.div`\r\n  width: 95%;\r\n  top: 18%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  position: absolute;\r\n  z-index: 1;\r\n  margin: 0 2.5%;\r\n`;\r\n\r\nexport const CategoryDropdownClosed = styled.div`\r\n  width: 100px;\r\n  height: 35px;\r\n  border: solid ${color.primaryTextColor} 1px;\r\n  background: white;\r\n  border-radius: 4px;\r\n  display: inline-flex;\r\n  box-sizing: border-box;\r\n  padding: 8px 12px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  > img {\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n`;\r\n\r\nexport const CategoryDropdownOpened = styled.ul`\r\n  width: 100px;\r\n  border: solid ${color.primaryTextColor} 1px;\r\n  background: white;\r\n  border-radius: 5px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  flex-direction: column;\r\n\r\n  > li:first-child {\r\n    width: 78px;\r\n    height: 36px;\r\n    justify-content: space-between;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    border-bottom: solid 1px #dadada;\r\n    margin-bottom: 5px;\r\n    padding: 0 2px;\r\n\r\n    > img {\r\n      width: 12px;\r\n      height: 12px;\r\n    }\r\n\r\n    &:hover {\r\n      background: white;\r\n    }\r\n  }\r\n\r\n  > li {\r\n    width: 100%;\r\n    height: 24px;\r\n    padding: 0 12px 5px 12px;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${color.lightPrimaryColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SearchInputContainer = styled.div`\r\n  width: ${pxToRem(520)}rem;\r\n  height: 35px;\r\n  box-sizing: border-box;\r\n  border: solid ${color.darkBorderColor} 1px;\r\n  border-radius: 4px;\r\n  padding: 10px 18px;\r\n  margin-left: ${pxToRem(34)}rem;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background: white;\r\n\r\n  > img {\r\n    width: 14px;\r\n    height: 14px;\r\n    display: inline-block;\r\n  }\r\n\r\n  > input {\r\n    width: 100%;\r\n    font-size: 13px;\r\n    display: inline-block;\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\nimport * as S from \"./style\";\r\nimport { GetApplicantsListPayload } from \"../../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  searchProgressImg: string;\r\n  searchIcon: string;\r\n  setFilter: (payload: GetApplicantsListPayload) => void;\r\n}\r\n\r\nconst SearchBar: FC<Props> = ({ searchProgressImg, searchIcon, setFilter }) => {\r\n  const categoryList = [\r\n    { content: \"전화번호\", id: \"telephone_number\" },\r\n    { content: \"이름\", id: \"name\" },\r\n    { content: \"접수번호\", id: \"receipt_code\" },\r\n  ];\r\n\r\n  const [keyword, setKeyword] = React.useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = React.useState(\r\n    categoryList[0]\r\n  );\r\n  const [isOpened, setIsOpened] = React.useState(false);\r\n\r\n  const handleClickDropdown = React.useCallback(() => {\r\n    setIsOpened(!isOpened);\r\n  }, [isOpened]);\r\n\r\n  const handleSelectItem = React.useCallback(\r\n    (category: { content; id }) => {\r\n      setFilter({\r\n        size: 1,\r\n        [selectedCategory.id]: null,\r\n        [category.id]: keyword,\r\n      });\r\n      setSelectedCategory(category);\r\n    },\r\n    [selectedCategory, keyword]\r\n  );\r\n\r\n  const handleChangeKeyword = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setKeyword(e.target.value);\r\n      setFilter({\r\n        size: 1,\r\n        [selectedCategory.id]: e.currentTarget.value || null,\r\n      });\r\n    },\r\n    [selectedCategory, keyword]\r\n  );\r\n\r\n  return (\r\n    <S.SearchBarWrapper>\r\n      {isOpened ? (\r\n        <S.CategoryDropdownOpened onClick={handleClickDropdown}>\r\n          <li>\r\n            {selectedCategory.content}\r\n            <img src={searchProgressImg} alt=\"details arrow\" />\r\n          </li>\r\n          {categoryList.map((content) => (\r\n            <li key={content.id} onClick={() => handleSelectItem(content)}>\r\n              {content.content}\r\n            </li>\r\n          ))}\r\n        </S.CategoryDropdownOpened>\r\n      ) : (\r\n        <S.CategoryDropdownClosed onClick={handleClickDropdown}>\r\n          {selectedCategory.content}\r\n          <img src={searchProgressImg} alt=\"details arrow\" />\r\n        </S.CategoryDropdownClosed>\r\n      )}\r\n      <S.SearchInputContainer>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"검색어를 입력해주세요\"\r\n          value={keyword}\r\n          onChange={handleChangeKeyword}\r\n        />\r\n        <img src={searchIcon} />\r\n      </S.SearchInputContainer>\r\n    </S.SearchBarWrapper>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { pxToRem } from 'src/styles';\r\nimport styled from 'styled-components';\r\n\r\nexport const FilterWrapper = styled.div`\r\n  width: 95%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: absolute;\r\n  top: 58px;\r\n  margin: 0 2.5%;\r\n`;\r\n\r\nexport const FilterSelectBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 50%;\r\n  min-width: ${pxToRem(652.8)}rem;\r\n`;\r\n\r\nexport const FilterButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 50%;\r\n  min-width: ${pxToRem(416)}rem;\r\n`;\r\n\r\nexport const FilterItemContainer = styled.span`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  > p {\r\n    display: inline-block;\r\n    color: #3f3f3f;\r\n    margin-left: 10px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","export const downloadExcel = async (api: () => Promise<any>, title: string) => {\r\n    const response = await api();\r\n  \r\n    const currentTime = new Date();\r\n  \r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(new Blob([response])).toString();\r\n    link.setAttribute(\r\n      'download',\r\n      `${title}_${currentTime.getMonth() +\r\n        1}월${currentTime.getDate()}일_${currentTime.getHours()}시${currentTime.getMinutes()}분.xlsx`,\r\n    );\r\n    link.click();\r\n  };\r\n  ","import React, { FC } from \"react\";\r\nimport * as S from \"./style\";\r\nimport { Button } from \"../../../common\";\r\nimport { Checkbox } from \"../../../common\";\r\nimport { downloadExcel } from \"../../../../utils/download\";\r\nimport { downloadApplicantsListExcel } from \"../../../../data/api/index\";\r\nimport { GetApplicantsListPayload } from \"../../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  filters: GetApplicantsListPayload;\r\n  setFilter: (payload: GetApplicantsListPayload) => void;\r\n}\r\n\r\nconst Filter: FC<Props> = ({ filters, setFilter }) => {\r\n  const checkLists = [\r\n    { content: \"대전\", value: \"is_daejeon\" },\r\n    { content: \"전국\", value: \"is_nationwide\" },\r\n    { content: \"원서 미도착\", value: \"is_arrived\" },\r\n    { content: \"일반 전형\", value: \"is_common\" },\r\n    { content: \"마이스터 전형\", value: \"is_meister\" },\r\n    { content: \"사회통합 전형\", value: \"is_social\" },\r\n  ];\r\n\r\n  const handleChangeFilter = (value: string) => {\r\n    let newFilter = { size: 1 };\r\n\r\n    if (value === \"is_daejeon\" && !filters[value] && filters[\"is_nationwide\"]) {\r\n      newFilter[\"is_daejeon\"] = true;\r\n      newFilter[\"is_nationwide\"] = null;\r\n    } else if (\r\n      value === \"is_nationwide\" &&\r\n      !filters[value] &&\r\n      filters[\"is_daejeon\"]\r\n    ) {\r\n      newFilter[\"is_nationwide\"] = true;\r\n      newFilter[\"is_daejeon\"] = null;\r\n    } else if (value === \"is_arrived\") {\r\n      newFilter[value] = filters[value] === false ? null : false;\r\n    } else {\r\n      newFilter[value] = !filters[value] || null;\r\n    }\r\n\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  const checkIsChecked = React.useCallback(\r\n    (value: string) => {\r\n      if (value === \"is_arrived\" && filters[value] === false) {\r\n        return true;\r\n      } else {\r\n        return filters[value];\r\n      }\r\n    },\r\n    [filters]\r\n  );\r\n\r\n  const handleDownloadExcel = React.useCallback(async () => {\r\n    await downloadExcel(downloadApplicantsListExcel, \"지원자목록\");\r\n  }, []);\r\n\r\n  const handleDeleteApplicants = React.useCallback(async () => {}, []);\r\n\r\n  return (\r\n    <S.FilterWrapper>\r\n      <S.FilterSelectBox>\r\n        {checkLists.map((item) => (\r\n          <S.FilterItemContainer\r\n            key={item.value}\r\n            onClick={() => handleChangeFilter(item.value)}\r\n          >\r\n            <Checkbox isChecked={checkIsChecked(item.value)} />\r\n            <p>{item.content}</p>\r\n          </S.FilterItemContainer>\r\n        ))}\r\n      </S.FilterSelectBox>\r\n      <S.FilterButtonContainer>\r\n        <Button\r\n          className=\"admission-code__download-btn\"\r\n          onClick={handleDownloadExcel}\r\n        >\r\n          수험번호 출력\r\n        </Button>\r\n        <Button\r\n          className=\"applicant-list__excel-btn\"\r\n          onClick={handleDownloadExcel}\r\n        >\r\n          Excel 출력\r\n        </Button>\r\n        <Button className=\"delete-all__btn\" onClick={handleDeleteApplicants}>\r\n          전체 삭제\r\n        </Button>\r\n      </S.FilterButtonContainer>\r\n    </S.FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nconst FilterSearchWrapper = styled.div`\r\n  width: 100%;\r\n  height: 14%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  box-sizing: border-box;\r\n  justify-content: flex-end;\r\n  position: relative;\r\n`;\r\n\r\nexport default FilterSearchWrapper;\r\n","import React, { FC } from \"react\";\r\nimport { list_progressbar, search_icon } from \"../../../assets/applicants\";\r\nimport SearchBar from \"./searchBar\";\r\nimport Filter from \"./filter\";\r\nimport FilterSearchWrapper from \"./style\";\r\nimport { GetApplicantsListPayload } from \"../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  filters: GetApplicantsListPayload;\r\n  setFilter: (payload: GetApplicantsListPayload) => void;\r\n}\r\n\r\nconst FilterSearch: FC<Props> = ({ filters, setFilter }) => {\r\n  return (\r\n    <FilterSearchWrapper>\r\n      <SearchBar\r\n        searchProgressImg={list_progressbar}\r\n        searchIcon={search_icon}\r\n        setFilter={setFilter}\r\n      />\r\n      <Filter filters={filters} setFilter={setFilter} />\r\n    </FilterSearchWrapper>\r\n  );\r\n};\r\n\r\nexport default FilterSearch;\r\n","import styled from 'styled-components';\r\n\r\nexport const PaginationContainer = styled.div`\r\n  font-size: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  bottom: 2%;\r\n  left: 50%;\r\n`;\r\n\r\nexport const PageBtn = styled.span`\r\n  font-weight: 500;\r\n  margin: 0 8px;\r\n  cursor: pointer;\r\n\r\n  &.selected {\r\n    font-weight: bold;\r\n  }\r\n  &.move-btn {\r\n    & > img {\r\n      width: 12px;\r\n      height: 12px;\r\n    }\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport * as S from \"./style\";\r\nimport { shift_left_icon, shift_right_icon } from \"../../../assets/applicants\";\r\nimport { getIndexList } from \"../../../utils/pagination\";\r\nimport {\r\n  GetApplicantsListPayload,\r\n  GetApplicantsListResponse,\r\n} from \"../../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  applicantsList: GetApplicantsListResponse;\r\n  setFilter: (payload: GetApplicantsListPayload) => void;\r\n}\r\n\r\nconst Pagination: FC<Props> = ({ applicantsList, setFilter }) => {\r\n  const [currentIndex, setCurrentIndex] = React.useState(1);\r\n  const [indexList, setIndexList] = React.useState<number[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    setIndexList(getIndexList(currentIndex, applicantsList.total_elements));\r\n  }, [applicantsList.total_elements, currentIndex]);\r\n\r\n  React.useEffect(() => {\r\n    setFilter({\r\n      size: currentIndex,\r\n    });\r\n  }, [currentIndex]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentIndex(1);\r\n  }, [applicantsList.total_elements]);\r\n\r\n  const handleClickIndex = React.useCallback((index: number) => {\r\n    setCurrentIndex(index);\r\n  }, []);\r\n  const handleClickPrev = React.useCallback(() => {\r\n    if (currentIndex > 1) setCurrentIndex(currentIndex - 1);\r\n  }, [currentIndex, applicantsList.total_elements]);\r\n  const handleClickNext = React.useCallback(() => {\r\n    if (currentIndex < applicantsList.total_elements)\r\n      setCurrentIndex(currentIndex + 1);\r\n  }, [currentIndex, applicantsList.total_elements]);\r\n\r\n  return (\r\n    <S.PaginationContainer className=\"no-select\">\r\n      <S.PageBtn className=\"move-btn\" onClick={handleClickPrev}>\r\n        <img src={shift_left_icon} alt=\"shift_left\" />\r\n      </S.PageBtn>\r\n      {indexList.map((i) => (\r\n        <S.PageBtn\r\n          key={i.toString()}\r\n          className={currentIndex === i && \"selected\"}\r\n          onClick={() => handleClickIndex(i)}\r\n        >\r\n          {i}\r\n        </S.PageBtn>\r\n      ))}\r\n      <S.PageBtn className=\"move-btn\" onClick={handleClickNext}>\r\n        <img src={shift_right_icon} alt=\"shift_right\" />\r\n      </S.PageBtn>\r\n    </S.PaginationContainer>\r\n  );\r\n};\r\nexport default Pagination;\r\n","export const getIndexList = (currentIndex: number, maxIndex: number) => {\r\n    const range = (start: number, end: number) => {\r\n      let arr = [] as any;\r\n  \r\n      let length = end - start;\r\n  \r\n      for (let i = 0; i <= length; i++) {\r\n        arr[i] = start;\r\n        start++;\r\n      }\r\n  \r\n      return arr;\r\n    };\r\n  \r\n    if (maxIndex < 6) return range(1, maxIndex);\r\n    else if (currentIndex < 3) return range(1, 5);\r\n    else if (maxIndex - currentIndex < 3) return range(maxIndex - 4, maxIndex);\r\n    else return range(currentIndex - 2, currentIndex + 2);\r\n  };\r\n  ","import React, { FC } from \"react\";\r\nimport * as S from \"./style\";\r\nimport ApplicantInfo from \"./applicantInfo\";\r\nimport ApplicantsList from \"./applicantsList\";\r\nimport FilterSearch from \"./filterSearch\";\r\nimport Pagination from \"./pagination\";\r\nimport {\r\n  GetApplicantsListResponse,\r\n  GetApplicantsListPayload,\r\n  GetApplicantInfoResponse,\r\n  UpdateApplicantStatusPayload,\r\n} from \"../../data/api/apiTypes\";\r\n\r\ninterface Props {\r\n  applicantsList: GetApplicantsListResponse;\r\n  filters: GetApplicantsListPayload;\r\n  currnetApplicantInfo: GetApplicantInfoResponse;\r\n  updateApplicantStatusStatus: number;\r\n  updateApplicantStatus: UpdateApplicantStatusPayload;\r\n  // updateApplicantList: ;\r\n  resetUpdateStatus;\r\n  // getApplicantInfo: (payload: ) => void;\r\n  setFilter: (payload: GetApplicantsListPayload) => void;\r\n}\r\n\r\nconst Applicant: FC<Props> = ({\r\n  applicantsList,\r\n  filters,\r\n  currnetApplicantInfo,\r\n  updateApplicantStatusStatus,\r\n  updateApplicantStatus,\r\n  resetUpdateStatus,\r\n  setFilter,\r\n}) => {\r\n  return (\r\n    <S.Applicant>\r\n      <S.ApplicantContainer>\r\n        <FilterSearch filters={filters} setFilter={setFilter} />\r\n        <ApplicantsList applicantsList={applicantsList} filters={filters} />\r\n        <Pagination applicantsList={applicantsList} setFilter={setFilter} />\r\n      </S.ApplicantContainer>\r\n      <S.ApplicantInfoWrap>\r\n        {currnetApplicantInfo && (\r\n          <ApplicantInfo\r\n            applicantsList={applicantsList}\r\n            currnetApplicantInfo={currnetApplicantInfo}\r\n            updateApplicantStatusStatus={updateApplicantStatusStatus}\r\n            updateApplicantStatus={updateApplicantStatus}\r\n            resetUpdateStatus={resetUpdateStatus}\r\n          />\r\n        )}\r\n      </S.ApplicantInfoWrap>\r\n    </S.Applicant>\r\n  );\r\n};\r\n\r\nexport default Applicant;\r\n","import Applicant from './Applicant';\r\nexport default Applicant;\r\n"],"sourceRoot":""}