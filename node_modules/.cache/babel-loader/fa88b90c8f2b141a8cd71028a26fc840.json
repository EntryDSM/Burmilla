{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getStatisticsAction, setSelectedRegionAction } from '../../data/modules/redux/action/main';\nexport const useStatistics = () => {\n  _s();\n\n  const statisticsStore = useSelector(state => ({\n    statistics: state.statistics.statistics,\n    getStatisticsStatus: state.statistics.getStatisticsStatus,\n    selectedRegion: state.statistics.selectedRegion\n  }));\n  const dispatch = useDispatch();\n  const getStatistics = useCallback(payload => dispatch(getStatisticsAction(payload)), [dispatch]);\n  const setSelectedRegion = useCallback(payload => dispatch(setSelectedRegionAction(payload)), []);\n  return {\n    statisticsStore,\n    getStatistics,\n    setSelectedRegion\n  };\n};\n\n_s(useStatistics, \"Ynoaq6vQUP69RBR0QcJ86jjzB1Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport default useStatistics;","map":{"version":3,"sources":["C:/Users/rbgus/OneDrive/바탕 화면/entry admin 6.0/burmilla/Burmilla/src/hooks/useStatistics/useStatistics.ts"],"names":["useCallback","useSelector","useDispatch","getStatisticsAction","setSelectedRegionAction","useStatistics","statisticsStore","state","statistics","getStatisticsStatus","selectedRegion","dispatch","getStatistics","payload","setSelectedRegion"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAEEC,mBAFF,EAIEC,uBAJF,QAKO,sCALP;AASA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAMC,eAAe,GAAGL,WAAW,CAAyBM,KAAK,KAAK;AACpEC,IAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBA,UADuC;AAEpEC,IAAAA,mBAAmB,EAAEF,KAAK,CAACC,UAAN,CAAiBC,mBAF8B;AAGpEC,IAAAA,cAAc,EAAEH,KAAK,CAACC,UAAN,CAAiBE;AAHmC,GAAL,CAA9B,CAAnC;AAMA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,aAAa,GAAGZ,WAAW,CAC9Ba,OAAD,IAAmCF,QAAQ,CAACR,mBAAmB,CAACU,OAAD,CAApB,CADZ,EAE/B,CAACF,QAAD,CAF+B,CAAjC;AAIA,QAAMG,iBAAiB,GAAGd,WAAW,CAClCa,OAAD,IACEF,QAAQ,CAACP,uBAAuB,CAACS,OAAD,CAAxB,CAFyB,EAGnC,EAHmC,CAArC;AAMA,SAAO;AAAEP,IAAAA,eAAF;AAAmBM,IAAAA,aAAnB;AAAkCE,IAAAA;AAAlC,GAAP;AACD,CApBM;;GAAMT,a;UACaJ,W,EAMPC,W;;;AAenB,eAAeG,aAAf","sourcesContent":["import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  getStatisticsPayload,\r\n  getStatisticsAction,\r\n  setSelectedRegionPayload,\r\n  setSelectedRegionAction,\r\n} from '../../data/modules/redux/action/main';\r\nimport { AppState } from '../../data/modules/store';\r\nimport { InitialState } from '../../data/modules/redux/reducer/main';\r\n\r\nexport const useStatistics = () => {\r\n  const statisticsStore = useSelector<AppState, InitialState>(state => ({\r\n    statistics: state.statistics.statistics,\r\n    getStatisticsStatus: state.statistics.getStatisticsStatus,\r\n    selectedRegion: state.statistics.selectedRegion,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getStatistics = useCallback(\r\n    (payload: getStatisticsPayload) => dispatch(getStatisticsAction(payload)),\r\n    [dispatch],\r\n  );\r\n  const setSelectedRegion = useCallback(\r\n    (payload: setSelectedRegionPayload) =>\r\n      dispatch(setSelectedRegionAction(payload)),\r\n    [],\r\n  );\r\n\r\n  return { statisticsStore, getStatistics, setSelectedRegion };\r\n};\r\n\r\nexport default useStatistics;\r\n"]},"metadata":{},"sourceType":"module"}