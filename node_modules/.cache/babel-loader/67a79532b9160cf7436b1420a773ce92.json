{"ast":null,"code":"import { combineReducers } from 'redux';\nimport applicant from './applicant';\nimport auth from './auth';\nimport statistics from './receipt';\nconst rootReducer = combineReducers({\n  applicant,\n  auth,\n  statistics\n});\nexport default rootReducer;\nexport const returnApiResponseData = props => {\n  if (!props.payload.data || props.payload.data === ' ') {\n    return { ...props.state,\n      [props.statusName]: props.payload.status\n    };\n  }\n\n  if (props.dataKeyName) {\n    return { ...props.state,\n      [props.dataKeyName]: props.payload.data,\n      [props.statusName]: props.payload.status\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/rbgus/OneDrive/바탕 화면/entry admin 6.0/burmilla/Burmilla/src/data/modules/redux/reducer/index.ts"],"names":["combineReducers","applicant","auth","statistics","rootReducer","returnApiResponseData","props","payload","data","state","statusName","status","dataKeyName"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChCC,EAAAA,SADgC;AAEhCC,EAAAA,IAFgC;AAGhCC,EAAAA;AAHgC,CAAD,CAAnC;AAMA,eAAeC,WAAf;AAEA,OAAO,MAAMC,qBAAqB,GAAOC,KAAJ,IAQ5B;AACP,MAAI,CAACA,KAAK,CAACC,OAAN,CAAcC,IAAf,IAAuBF,KAAK,CAACC,OAAN,CAAcC,IAAd,KAAuB,GAAlD,EAAuD;AACrD,WAAO,EACL,GAAGF,KAAK,CAACG,KADJ;AAEL,OAACH,KAAK,CAACI,UAAP,GAAoBJ,KAAK,CAACC,OAAN,CAAcI;AAF7B,KAAP;AAID;;AAED,MAAIL,KAAK,CAACM,WAAV,EAAuB;AACrB,WAAO,EACL,GAAGN,KAAK,CAACG,KADJ;AAEL,OAACH,KAAK,CAACM,WAAP,GAAqBN,KAAK,CAACC,OAAN,CAAcC,IAF9B;AAGL,OAACF,KAAK,CAACI,UAAP,GAAoBJ,KAAK,CAACC,OAAN,CAAcI;AAH7B,KAAP;AAKD;AACF,CAvBM","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport applicant from './applicant';\r\nimport auth from './auth';\r\nimport statistics from './receipt';\r\n\r\nconst rootReducer = combineReducers({\r\n    applicant,\r\n    auth,\r\n    statistics,\r\n})\r\n\r\nexport default rootReducer;\r\n\r\nexport const returnApiResponseData = <I>(props: {\r\n  state: I;\r\n  statusName: string;\r\n  payload: {\r\n    data?: null | any;\r\n    status?: number;\r\n  };\r\n  dataKeyName?: string;\r\n}): I => {\r\n  if (!props.payload.data || props.payload.data === ' ') {\r\n    return {\r\n      ...props.state,\r\n      [props.statusName]: props.payload.status,\r\n    };\r\n  }\r\n\r\n  if (props.dataKeyName) {\r\n    return {\r\n      ...props.state,\r\n      [props.dataKeyName]: props.payload.data,\r\n      [props.statusName]: props.payload.status,\r\n    };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}