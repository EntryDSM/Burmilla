// Generated by CoffeeScript 2.5.1
// Abstract Style Declaration
var _Declaration;

module.exports = _Declaration = (function() {
  var self;

  class _Declaration {
    static setOnto(declarations, prop, val) {
      var dec;
      if (!(dec = declarations[prop])) {
        return declarations[prop] = new this(prop, val);
      } else {
        return dec.set(val);
      }
    }

    static sanitizeValue(val) {
      return String(val).trim().replace(/[\s]+/g, ' ');
    }

    constructor(prop1, val) {
      this.prop = prop1;
      this.important = false;
      this.set(val);
    }

    get() {
      return this._get();
    }

    _get() {
      return this.val;
    }

    _pickImportantClause(val) {
      if (self.importantClauseRx.test(String(val))) {
        this.important = true;
        return val.replace(self.importantClauseRx, '');
      } else {
        this.important = false;
        return val;
      }
    }

    set(val) {
      val = self.sanitizeValue(val);
      val = this._pickImportantClause(val);
      val = val.trim();
      if (this._handleNullOrInherit(val)) {
        return this;
      }
      this._set(val);
      return this;
    }

    _set(val) {
      return this.val = val;
    }

    _handleNullOrInherit(val) {
      if (val === '') {
        this.val = '';
        return true;
      }
      if (val === 'inherit') {
        if (this.constructor.inheritAllowed) {
          this.val = 'inherit';
        } else {
          throw Error(`Inherit is not allowed for \`${this.prop}\``);
        }
        return true;
      } else {
        return false;
      }
    }

  };

  self = _Declaration;

  _Declaration.importantClauseRx = /(\s\!important)$/;

  _Declaration.inheritAllowed = false;

  return _Declaration;

}).call(this);
